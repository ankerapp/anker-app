(()=>{"use strict";var e={};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var a=e.g.document;if(!n&&a&&(a.currentScript&&(n=a.currentScript.src),!n)){var t=a.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})();e.p;const n=new class{state={};async loadData(){try{const e=await async function(e){try{const a=fetch(e),t=await Promise.race([a,(n=10,new Promise((function(e,a){setTimeout((()=>{a(`Request took too long! Timeout after ${n} seconds.`)}),1e3*n)})))]),r=await t.json();if(!t.ok)throw new Error(`${r.message} (${t.status})`);return r}catch(e){throw e}var n}("https://ankerdata.netlify.app/data.json");this.state.data=e}catch(e){throw e}}};const a=new class{#e;#n="Bad Request. Please try again!";#a=document.querySelector(".app-container");render(e){if(!e)return this.renderError();this.#e=e;let n=this.#t(this.#e);n+=this.#r(this.#e),n+=this.#s(),this.#i(),this.#a.insertAdjacentHTML("afterbegin",n)}#t(e){return`\n            <header class="header">\n                <div class="header__image-box">\n                    <img id="header__image" class="header__image" src="${e.profilePic}" alt="Profile Pic">\n                </div>\n                <div class="header__profile-username">\n                    <p class="header__username lead">${e.name}</p>\n                </div>\n            </header>\n        `}#r(e){return`\n            <section class="app-body">\n                <ul class="links">\n                    ${e.links.map(this.#o).join("")}\n                </ul>\n                <ul class="social-links">\n                    ${e.socials.map(this.#l).join("")}\n                </ul>\n            </section>\n        `}#s(){return'\n            <footer class="footer">\n                <div class="footer__logo-box">\n                    <svg width="0" height="0" class="hidden">\n                      <symbol version="1.1" id="logo" xmlns="http://www.w3.org/2000/svg" xmlnsSvg="http://www.w3.org/2000/svg" viewBox="0 0 21.62109 32.271481">\n                        <g inkscapeLabel="Layer 1" inkscapeGroupmode="layer" id="layer1" transform="translate(-94.189455,-132.36426)">\n                          <g id="g1427" transform="translate(-438.64257,-4.54199)">\n                            <path d="m 543.64258,141.74805 c -5.95526,0 -10.81055,4.85529 -10.81055,10.81054 0,5.95526 4.85529,10.8125 10.81055,10.8125 5.95525,0 10.81054,-4.85724 10.81054,-10.8125 0,-5.95525 -4.85529,-10.81054 -10.81054,-10.81054 z m 0,2.64453 c 4.52534,0 8.16601,3.64067 8.16601,8.16601 0,4.52535 -3.64067,8.16602 -8.16601,8.16602 -4.52534,0 -8.16602,-3.64067 -8.16602,-8.16602 0,-4.52534 3.64068,-8.16601 8.16602,-8.16601 z" id="circle1358"></path>\n                            <path d="m 536.64453,163.9707 a 1.322915,1.322915 0 0 0 -1.67969,0.82032 1.322915,1.322915 0 0 0 0.82032,1.68164 l 7.85742,2.70507 7.85937,-2.70507 a 1.322915,1.322915 0 0 0 0.82032,-1.68164 1.322915,1.322915 0 0 0 -1.68165,-0.82032 l -6.99804,2.40821 z" id="path1360"></path>\n                            <path d="m 536.18555,136.90625 a 1.322915,1.322915 0 0 0 -1.32227,1.32227 1.322915,1.322915 0 0 0 1.32227,1.32421 h 14.91406 a 1.322915,1.322915 0 0 0 1.32226,-1.32421 1.322915,1.322915 0 0 0 -1.32226,-1.32227 z" id="path1362"></path>\n                          </g>\n                        </g>\n                      </symbol>\n                    </svg>\n                    <svg class="logo"><use href="#logo"/></svg>\n                </div>\n            </footer>\n        '}#o(e){return`<li class="link-item"><a class="link" href="${e.link}">${e.title}</a></li>`}#l(e){return`<li class="social-link-item">\n            <a class="social-link" href="${e.link}">\n                <svg class="social-icon">\n                    <use href="./assets/tabler-sprite.svg#tabler-brand-${e.title}"/>\n                </svg>\n            </a>\n        </li>`}#i(){this.#a.innerHTML=""}renderSpinner(){this.#i(),this.#a.insertAdjacentHTML("afterbegin",'\n            <div class="app-body app-body__load">\n                <div class="spinner">\n                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-loader" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">\n                       <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>\n                       <line x1="12" y1="6" x2="12" y2="3"></line>\n                       <line x1="16.25" y1="7.75" x2="18.4" y2="5.6"></line>\n                       <line x1="18" y1="12" x2="21" y2="12"></line>\n                       <line x1="16.25" y1="16.25" x2="18.4" y2="18.4"></line>\n                       <line x1="12" y1="18" x2="12" y2="21"></line>\n                       <line x1="7.75" y1="16.25" x2="5.6" y2="18.4"></line>\n                       <line x1="6" y1="12" x2="3" y2="12"></line>\n                       <line x1="7.75" y1="7.75" x2="5.6" y2="5.6"></line>\n                    </svg>\n                </div>\n            </div>\n        ')}renderError(){const e=`\n            <div class="app-body app-body__load">\n                <div class="error">\n                    ${this.#n}\n                </div>\n            </div>\n        `;this.#i(),this.#a.insertAdjacentHTML("afterbegin",e)}};new class{constructor(){this.controlView()}async controlView(){try{a.renderSpinner(),await n.loadData(),a.render(n.state.data)}catch(e){throw e}}}})();